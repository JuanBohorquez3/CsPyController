from enaml.widgets.api import MainWindow, MenuBar, Menu, Action, ActionGroup


enamldef Main(MainWindow):
    MenuBar:
        Menu:
            title = '&File'
            Action:
                text = 'New File\tCtrl+N'
                triggered :: print 'New File triggered'
            Action:
                text = 'Open File\tCtrl+O'
                triggered :: print 'Open File triggered'
            Action:
                text = 'Open Folder...'
                triggered :: print 'Open Folder triggered'
        Menu:
            title = '&Edit'
            Action:
                text = 'Undo\tCtrl+Z'
                triggered :: print 'Undo triggered'
            Action:
                text = 'Redo\tCtrl+R'
                triggered :: print 'Redo triggered'
            Menu:
                title = 'Undo Selection'
                Action:
                    text = 'Undo Insert\tCtrl+U'
                    triggered :: print 'Undo Insert triggered'
                Action:
                    text = 'Redo Insert\tCtrl+Shift+U'
                    enabled = False
                    triggered :: print 'Redo Insert triggered'
            Action:
                separator = True
            Action:
                text = 'Cut\tCtrl+X'
                triggered :: print "Cut triggered"
            Action:
                text = 'Copy\tCtrl+C'
                triggered :: print 'Copy triggered'
            Action:
                text = 'Paste\tCtrl+V'
                triggered :: print 'Paste triggered'
        Menu:
            title = '&View'
            ActionGroup:
                Action:
                    checkable = True
                    text = 'Center'
                    toggled :: print '%s toggled %s' % (text, 'on' if checked else 'off')
                Action:
                    checkable = True
                    text = 'Left'
                    toggled :: print '%s toggled %s' % (text, 'on' if checked else 'off')
                Action:
                    checkable = True
                    text = 'Right'
                    toggled :: print '%s toggled %s' % (text, 'on' if checked else 'off')
                Action:
                    checkable = True
                    text = 'Justify'
                    toggled :: print '%s toggled %s' % (text, 'on' if checked else 'off')